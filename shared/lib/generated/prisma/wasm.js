
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.0
 * Query Engine version: 9c30299f5a0ea26a96790e13f796dc6094db3173
 */
Prisma.prismaVersion = {
  client: "6.11.0",
  engine: "9c30299f5a0ea26a96790e13f796dc6094db3173"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  userId: 'userId',
  userPassword: 'userPassword',
  createdAt: 'createdAt',
  role: 'role',
  memberId: 'memberId'
};

exports.Prisma.AdminScalarFieldEnum = {
  adminName: 'adminName',
  adminPhone: 'adminPhone',
  memberId: 'memberId'
};

exports.Prisma.StudentScalarFieldEnum = {
  academyId: 'academyId',
  studentName: 'studentName',
  studentPhone: 'studentPhone',
  studentHighschool: 'studentHighschool',
  studentBirthYear: 'studentBirthYear',
  studentMemo: 'studentMemo',
  memberId: 'memberId'
};

exports.Prisma.AcademyScalarFieldEnum = {
  academyId: 'academyId',
  academyName: 'academyName',
  academyPhone: 'academyPhone',
  academyAddress: 'academyAddress',
  createdAt: 'createdAt',
  academyMainImage: 'academyMainImage'
};

exports.Prisma.AcademyImageScalarFieldEnum = {
  academyImageId: 'academyImageId',
  academyImageUrl: 'academyImageUrl',
  academyId: 'academyId',
  createdAt: 'createdAt',
  academyImageName: 'academyImageName'
};

exports.Prisma.AnnouncementScalarFieldEnum = {
  announcementId: 'announcementId',
  title: 'title',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  authorId: 'authorId',
  isItAssetAnnouncement: 'isItAssetAnnouncement',
  isItImportantAnnouncement: 'isItImportantAnnouncement'
};

exports.Prisma.AnnouncementFileScalarFieldEnum = {
  id: 'id',
  key: 'key',
  originalName: 'originalName',
  fileType: 'fileType',
  announcementId: 'announcementId',
  uploadedAt: 'uploadedAt'
};

exports.Prisma.QnABoardScalarFieldEnum = {
  qnaId: 'qnaId',
  qnaTitle: 'qnaTitle',
  qnaContent: 'qnaContent',
  qnaUserId: 'qnaUserId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  qnaImageUrl: 'qnaImageUrl'
};

exports.Prisma.QnABoardCommentScalarFieldEnum = {
  commentId: 'commentId',
  commentContent: 'commentContent',
  commentUserId: 'commentUserId',
  qnaId: 'qnaId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  userId: 'userId',
  userPassword: 'userPassword'
};

exports.Prisma.AdminOrderByRelevanceFieldEnum = {
  adminName: 'adminName',
  adminPhone: 'adminPhone'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.StudentOrderByRelevanceFieldEnum = {
  studentName: 'studentName',
  studentPhone: 'studentPhone',
  studentHighschool: 'studentHighschool',
  studentMemo: 'studentMemo'
};

exports.Prisma.AcademyOrderByRelevanceFieldEnum = {
  academyName: 'academyName',
  academyPhone: 'academyPhone',
  academyAddress: 'academyAddress',
  academyMainImage: 'academyMainImage'
};

exports.Prisma.AcademyImageOrderByRelevanceFieldEnum = {
  academyImageUrl: 'academyImageUrl',
  academyImageName: 'academyImageName'
};

exports.Prisma.AnnouncementOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content'
};

exports.Prisma.AnnouncementFileOrderByRelevanceFieldEnum = {
  key: 'key',
  originalName: 'originalName',
  fileType: 'fileType'
};

exports.Prisma.QnABoardOrderByRelevanceFieldEnum = {
  qnaTitle: 'qnaTitle',
  qnaContent: 'qnaContent',
  qnaImageUrl: 'qnaImageUrl'
};

exports.Prisma.QnABoardCommentOrderByRelevanceFieldEnum = {
  commentContent: 'commentContent'
};
exports.Role = exports.$Enums.Role = {
  DEVELOPER: 'DEVELOPER',
  ADMIN: 'ADMIN',
  STUDENT: 'STUDENT'
};

exports.Prisma.ModelName = {
  User: 'User',
  Admin: 'Admin',
  Student: 'Student',
  Academy: 'Academy',
  AcademyImage: 'AcademyImage',
  Announcement: 'Announcement',
  AnnouncementFile: 'AnnouncementFile',
  QnABoard: 'QnABoard',
  QnABoardComment: 'QnABoardComment'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
