version: '3.8'

services:
  # Next.js + Python OMR Grading Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: base  # 개발 시에는 base stage만 사용
    container_name: OASIS-DEV
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      # Database Configuration - 로컬 MySQL 사용
      - DATABASE_URL=mysql://root:kk87345364@host.docker.internal:3306/AcademyDB
      # AWS S3 Configuration
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_S3_BUCKET_URL=${AWS_S3_BUCKET_URL}
      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      # Source code for hot reload
      - .:/app
      - /app/node_modules  # node_modules는 컨테이너 내부 사용
      # Temporary files for OMR processing
      - omr_temp:/tmp
      # Development data
      - dev_data:/app/data
    restart: unless-stopped
    command: npm run dev  # 개발 모드로 실행
    # 로컬 MySQL에 접근하기 위한 extra_hosts 설정
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # Health check for development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  # Temporary OMR processing files
  omr_temp:
    driver: local
  # Development data
  dev_data:
    driver: local

networks:
  default:
    name: omr-grading-dev-network
